#@ github = {
#@   "organization": "spring-projects",
#@   "repository": "spring-aot-smoke-tests",
#@   "uri": "https://github.com/spring-projects/spring-aot-smoke-tests.git"
#@ }
#@ docker_hub = {
#@   "organization": "springci"
#@ }
#@ branch = "main"
#@ milestone = "1.0.x"
#@ task_timeout = "1h00m"

#@ load("@ytt:data", "data")

resources:
- name: git-repo
  type: git
  icon: github
  source:
    uri: #@ github["uri"]
    username: ((github-username))
    password: ((github-password))
    branch: #@ branch
- name: ci-images-git-repo
  type: git
  icon: github
  source:
    uri: #@ github["uri"]
    branch: #@ branch
    paths:
      - "ci/images/*"
- name: ci-image
  type: registry-image
  icon: docker
  source:
    username: ((docker-hub-username))
    password: ((docker-hub-password))
    tag: #@ milestone
    repository: #@ docker_hub["organization"] + "/" + github["repository"] + "-ci"
jobs:
- name: build-ci-images
  plan:
  - get: ci-images-git-repo
    trigger: true
  - get: git-repo
  - task: build-ci-image
    privileged: true
    file: git-repo/ci/tasks/build-ci-image.yml
    output_mapping:
      image: ci-image
    vars:
      ci-image-name: ci-image
  - put: ci-image
    params:
      image: ci-image/image.tar
- name: update-pipeline
  plan:
  - get: ci-image
  - get: git-repo
    trigger: true
  - do:
    - task: update_pipeline
      image: ci-image
      file: git-repo/ci/tasks/update-pipeline.yml
  - set_pipeline: self
    file: git-repo/ci/pipeline.yml
#@ for smoke_test in data.values.smoke_tests:
- name: #@ smoke_test
  serial: true
  public: true
  plan:
  - get: ci-image
  - get: git-repo
  - do:
    - task: smoke-test
      image: ci-image
      privileged: true
      timeout: #@ task_timeout
      file: git-repo/ci/tasks/smoke-test.yml
      params:
        BRANCH: #@ branch
        SMOKE_TEST: #@ smoke_test
        GRADLE_ENTERPRISE_ACCESS_KEY: ((gradle_enterprise_secret_access_key))
        GRADLE_ENTERPRISE_CACHE_USERNAME: ((gradle_enterprise_cache_user.username))
        GRADLE_ENTERPRISE_CACHE_PASSWORD: ((gradle_enterprise_cache_user.password))
#@ end
groups:
- name: "infrastructure"
  jobs:
    - "build-ci-images"
    - "update-pipeline"
- name: "smoke-tests"
  jobs: #@ data.values.smoke_tests
